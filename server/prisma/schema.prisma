// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  id              String    @id @default(uuid())
  name            String
  email           String?   @unique
  password        String
  role            String    @default("user")
  createdAt DateTime @default(now())
  updateAt  DateTime  @updatedAt
  isEmailVerified Boolean   @default(false)
  tokens          Token[]
  roomsAsUser1    Room[]    @relation("user1Relation")
  roomsAsUser2    Room[]    @relation("user2Relation")
  messages        Message[]
}

model Token {
  id          String   @id @default(uuid())
  token       String   @db.VarChar(400)
  userId      String
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  type        String
  expires     DateTime
  blacklisted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updateAt  DateTime  @updatedAt
}

model Room {
  id        String    @id @default(uuid())
  name      String
  updateAt  DateTime @updatedAt
  userId    String
  userId2   String
  user1     User      @relation("user1Relation", fields: [userId], references: [id], onDelete: Cascade)
  user2     User      @relation("user2Relation", fields: [userId2], references: [id], onDelete: Cascade)
  messages  Message[]
}

model Message {
  id        String   @id @default(uuid())
  text      String
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
  userId    String
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  roomId    String
  Room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
}
